#include <cstdio>
#include <algorithm>
#include <cstring>
#define sf scanf
#define pf printf
#define diag 1
#define up 2
#define left 3
using namespace std;

char x[100],y[100];
int m,n,b[100][100],c[100][100];

int top_down(int i, int j)
{
    int result;

    if(i==0 or j==0)
    {
        return 0;
    }

    if(c[i][j] != -1)
    {
        return c[i][j];
    }

    if(x[i-1] == y[j-1])
    {
        result = top_down(i-1,j-1)+1;
        b[i][j] = diag;
    }

    else
    {
        int r1 = top_down(i-1,j);
        int r2 = top_down(i,j-1);

        if(r1 >= r2)
        {
            result = r1;
            c[i][j] = r1;
            b[i][j] = up;
        }

        else
        {
            result = r2;
            c[i][j] = r2;
            b[i][j] = left;
        }
    }

    return result;
}

void print_LCS(int i, int j)
{
    if(i==0 or j==0)
    {
        return;
    }

    if(b[i][j] == diag)
    {
        print_LCS(i-1,j-1);
        pf("%c",x[i-1]);
    }

    else if(b[i][j] == up)
    {
        print_LCS(i-1,j);
    }

    else
    {
        print_LCS(i,j-1);
    }
}

int main()
{
    sf("%s",&x);
    sf("%s",&y);

    m = strlen(x);
    n = strlen(y);

    for(int i=1;i<=100;i++)
    {
        for(int j=1;j<=100;j++)
        {
            c[i][j] = -1;
        }
    }

    top_down(m,n);

    for(int i=0;i<=m;i++)
    {
        for(int j=0;j<=n;j++)
        {
            pf("%d ",c[i][j]);
        }

        pf("\n");
    }

    print_LCS(m,n);

    return 0;
}
